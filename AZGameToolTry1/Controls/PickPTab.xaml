<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AZGameToolTry1.Controls"
			 xmlns:viewModel ="clr-namespace:AZGameToolTry1.ViewModel"
			 	  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
					  xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
					  xmlns:mahApps="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
					  xmlns:controls="clr-namespace:AZGameToolTry1.Controls"
					  xmlns:wpfexample="clr-namespace:MaterialDesignColors.WpfExample"
			 xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf" x:Class="AZGameToolTry1.Controls.PickPTab"
			 mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"			 
	DataContext="{Binding IPickPTabViewModel, Mode=OneWay, Source={StaticResource ServiceLocator}}"
			 >	
	<!--<d:DataContext>
		<viewModel:DesignTimePickPTabViewModel/>
	</d:DataContext>-->
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition/>
		</Grid.RowDefinitions>
		<materialDesign:Card Margin="5" Padding="5">
			<StackPanel>
				<TextBlock><Run Text="Project"/></TextBlock>
				<StackPanel Orientation="Horizontal">
					<Button Content="New" Margin="5" Command="{Binding ProjectCreateCommand}" IsEnabled="False">
						<Button.CommandParameter>
							<StackPanel Margin="16">
								<ProgressBar
					Margin="16"
					HorizontalAlignment="Center"
					IsIndeterminate="True"
					
					Value="0" />
								<!--Style="{DynamicResource MaterialDesignCircularProgressBar}"-->
								<Button
					HorizontalAlignment="Center"
					Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
					CommandParameter="Sample2Cancel"
					IsCancel="True">
									<!--Style="{StaticResource MaterialDesignFlatButton}"-->
									CANCEL
								</Button>
							</StackPanel>
						</Button.CommandParameter>
					</Button>
					<Button Content="Open" Margin="5" Command="{Binding ProjectOpenCommand}"/>
				</StackPanel>
			</StackPanel>
		</materialDesign:Card>
		<materialDesign:Card Grid.Row="1" Margin="5"  Padding="5">
			<StackPanel>
				<TextBlock Text="Recent Projects"/>
				<ListView ItemsSource="{Binding RecentProjectCollection}" ItemTemplate="{DynamicResource RecentProjectDataTemplate}" 
						  SelectionMode="Single" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" ItemContainerStyle="{DynamicResource ClickableListViewItemContainerStyle}">
					<ListView.Resources>
						<DataTemplate x:Key="RecentProjectDataTemplate">

							<Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{x:Null}">
								<!--<Grid.InputBindings>
									<MouseBinding Gesture="LeftClick" Command="{Binding DataContext.ProjectSelectCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
												 CommandParameter="{Binding}" />
								</Grid.InputBindings>-->
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<TextBlock Margin="5 0" Text="{Binding Date, StringFormat=g}"/>
								<TextBlock Grid.Column="1"  Margin="5 0" Text="{Binding Name}"/>
							</Grid>
						</DataTemplate>
						<Style x:Key="ClickableListViewItemContainerStyle" TargetType="{x:Type ListViewItem}">
							<Setter Property="Background" Value="Transparent"/>
							<Setter Property="BorderThickness" Value="0"/>
							<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
							<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
							<Setter Property="Padding" Value="8"/>
							<Setter Property="SnapsToDevicePixels" Value="True"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ListViewItem}">
										<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" ClipToBounds="{TemplateBinding ClipToBounds}" Margin="{TemplateBinding Margin}" >
											<VisualStateManager.VisualStateGroups>
												<VisualStateGroup x:Name="CommonStates">
													<VisualStateGroup.Transitions>
														<VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
															<VisualTransition.GeneratedEasingFunction>
																<CircleEase EasingMode="EaseOut"/>
															</VisualTransition.GeneratedEasingFunction>
														</VisualTransition>
													</VisualStateGroup.Transitions>
													<VisualState x:Name="Normal"/>
													<VisualState x:Name="MouseOver">
														<Storyboard>
															<DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Disabled"/>
												</VisualStateGroup>
												<VisualStateGroup x:Name="SelectionStates">
													<VisualStateGroup.Transitions>
														<VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.6" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
													</VisualStateGroup.Transitions>
													<VisualState x:Name="Selected">
														<Storyboard>
															<DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Unselected"/>
													<VisualState x:Name="SelectedUnfocused">
														<Storyboard>
															<DoubleAnimation Duration="0" To="0.03" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
														</Storyboard>
													</VisualState>
												</VisualStateGroup>
											</VisualStateManager.VisualStateGroups>
											<Grid>
												<Grid.InputBindings>
													<MouseBinding Gesture="LeftClick" Command="{Binding DataContext.ProjectSelectCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
												 CommandParameter="{Binding}" />
												</Grid.InputBindings>
												<Border x:Name="MouseOverBorder" Opacity="0">
													<Border.Background>
														<TemplateBinding Property="Foreground">
															<TemplateBinding.Converter>
																<Converters:BrushRoundConverter HighValue="White" LowValue="Black"/>
															</TemplateBinding.Converter>
														</TemplateBinding>
													</Border.Background>
												</Border>
												<Border x:Name="SelectedBorder" Opacity="0" RenderTransformOrigin="0.5,0.5">
													<Border.Background>
														<TemplateBinding Property="Foreground">
															<TemplateBinding.Converter>
																<Converters:BrushRoundConverter HighValue="White" LowValue="Black"/>
															</TemplateBinding.Converter>
														</TemplateBinding>
													</Border.Background>
													<Border.RenderTransform>
														<ScaleTransform ScaleX="1"/>
													</Border.RenderTransform>
												</Border>
												<materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
													<materialDesign:Ripple.Feedback>
														<TemplateBinding Property="Foreground">
															<TemplateBinding.Converter>
																<Converters:BrushRoundConverter HighValue="White" LowValue="Black"/>
															</TemplateBinding.Converter>
														</TemplateBinding>
													</materialDesign:Ripple.Feedback>
												</materialDesign:Ripple>
											</Grid>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsEnabled" Value="False">
												<Setter Property="Opacity" Value="0.56"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ListView.Resources>
				</ListView>
			</StackPanel>
		</materialDesign:Card>
	</Grid>
</UserControl>
